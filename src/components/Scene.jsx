/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 scene.gltf --transform
Author: urrmet (https://sketchfab.com/urrmet)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ocean-56112ae2e55e45a4951362b323540349
Title: ocean
*/
import * as THREE from 'three'
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { Canvas, extend, useThree, useLoader, useFrame } from '@react-three/fiber'

export function Model(props) {
  const group = useRef();
  const { nodes, materials, animations, scene } = useGLTF("/scene-transformed.glb");
  const { actions } = useAnimations(animations, group);

  const waterNormals = useLoader(THREE.TextureLoader, '/waternormals.jpg')

  console.log(waterNormals)

  useEffect(() => {
    actions.KeyAction.play();
    actions.KeyAction.timeScale = 1/4
    //used to enable lighting
    scene.traverse(child => child.material ? child.material.metalness = 0 : null)
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name='Sketchfab_Scene'>
        <group name='Cube000' rotation={[-Math.PI / 2, 0, 0]} scale={[0.202, 0.202, 1.008]}>
          <mesh
            name='Cube000_0'
            geometry={nodes.Cube000_0.geometry}
            material={materials["Scene_-_Root"]}
            morphTargetDictionary={nodes.Cube000_0.morphTargetDictionary}
            morphTargetInfluences={nodes.Cube000_0.morphTargetInfluences}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/scene-transformed.glb");
