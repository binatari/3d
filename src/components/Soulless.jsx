/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 scene.gltf --transform
Author: ali-rahimi-shahmirzadi (https://sketchfab.com/ali-rahimi-shahmirzadi)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/soulless-1a18f6f206b14073884e1a9c31c03cbc
Title: Soulless
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';

export function Soulless(props) {
  const { nodes, materials, scene } = useGLTF('/soulless/scene-transformed.glb')
  const ref = useRef()
  const scroll = useScroll()
  useEffect(() => {
    scene.traverse(child => child.material ? child.material.metalness = 0.5 : null)
  }, []);

  useFrame((state, delta) => {

    // console.log(scroll
    // const offset = 1 - scroll.offset

    //used to determine the scroll postition
    const b = scroll.range(4/ 6, 1)
    // const startScroll = scroll.offset > 0.6 ? 0 - scroll.offset * 5 : 0
    ref.current?.position?.set(0, - b * 50, 0)
    // state.camera.lookAt(0, 0, 0)
  })


  return (
    <group {...props} ref={ref} dispose={null}>
      <mesh geometry={nodes.Head1Mesh_lambert3_0.geometry} material={materials.lambert3} />
    </group>
  )
}

useGLTF.preload('/soulless/scene-transformed.glb')
